// syntax-rit.json
// Syntax theme based on the emacs color scheme I learned on at RIT.
{
  "$schema": "vscode://schemas/color-theme",
  "tokenColors": [{
      "name": "Red",
      "settings": {"foreground": "#cc241d"},
      "scope": [
        "beginning.punctuation.definition.list.markdown",
        "constant.other.caps.python",
        "meta.function-call.js",
        "meta.function.expression.js",
        "entity.name.function.js",
        "entity.name.function",
        "entity.name.tag",
        "entity.name.variable",
        "meta.object-literal.key.js",
        "meta.tag.any.html",
        "meta.tag.block.any.html",
        "meta.tag.inline.any.html",
        "punctuation.definition.parameters.begin",
        "punctuation.definition.parameters.end",
        "punctuation.definition.tag.begin.html",
        "punctuation.definition.tag.end.html",
        "punctuation.definition.string.begin.html",
        "punctuation.definition.string.end.html",
        "punctuation.section.embedded",
        "source.css meta.brace",
        "source.python",
        "source",
        "string.unquoted.tag-string",
        "support.function",
        "support.other.django.module",
        "support.type.property-name",
        "support.type.property-name",
        "support.type.vendored.property-name",
        "support.type.vendored.property-name",
        "support.variable",
        "variable.css",
        "variable.language",
        "variable.other.less",
        "variable.scss",
        "variable",
        "text.html",
        "text.xml",
      ],
    },{
      "name": "Pink",
      "settings": {"foreground": "#d77"},
      "scope": [
        "entity.tag.tagbraces",
        "keyword.operator.assignment",
        "keyword",
        "punctuation.separator.key-value.html",
        "source.css entity.other.attribute-name.pseudo-class",
        "source.css keyword.operator",
      ],
    },{
      "name": "Pink (lighter)",
      "settings": {"foreground": "#e55"},
      "scope": [
        "entity.other.attribute-name.html",
        "entity.other.attribute-name.localname.xml",
        "punctuation.attribute-shorthand.event.html",
        "python punctuation.definition.list",
        "source.python punctuation.definition.arguments",
        "source.python punctuation.definition.dictionary",
      ],
    },{
      "name": "Peach",
      "settings": {"foreground": "#fc8"},
      "scope": [
        "entity.name.function",
        "entity",
        "source.css entity.name.tag",
        "source.css entity.other.attribute-name.class",
      ],
    },{
      "name": "Orange",
      "settings": {"foreground": "#fe8019"},
      "scope": [
        "constant.language",
        "constant.language.python",
        "entity.other.inherited-class",
        "source.css support.constant.property-value.css",
        "constant.language.json.comments",
      ],
    },{
      "name": "Green",
      "settings": {"foreground": "#58973a"},
      "scope": [
        "comment",
        "keyword.codetag.notation",
        "string.quoted.docstring.multi.python",
        "storage.type.class.jsdoc",
        "entity.name.type.instance.jsdoc",
        "variable.other.jsdoc",
      ],
    },{
      "name": "Blue",
      "settings": {"foreground": "#458588"},
      "scope": [
        "keyword.control.tag-name",
        "keyword.control",
        "keyword.operator.new",
        "keyword.operator",
        "source.css entity.other.attribute-name.id",
        "source.css keyword.control.html",
        "storage.type.function",
        "storage",
        "support",
      ],
    },{
      "name": "Grey",
      "settings": {"foreground": "#ebdbb2"},
      "scope": [
        "constant.character.entity",
        "constant.numeric",
        "constant",
        "source.css constant.numeric",
        "source.css constant",
        "source.css keyword",
        "string.regexp",
        "text.html.django storage.type.attr",
        "text.html.django storage.type.templatetag",
      ],
    },{
      "name": "Grey (darker)",
      "settings": {"foreground": "#bdae93"},
      "scope": [
        "string.quoted.double",
        "string",
      ],
    }
  ]
}
